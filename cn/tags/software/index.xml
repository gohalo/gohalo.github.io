<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software on</title><link>https://gohalo.github.io/cn/tags/software/</link><description>Recent content in software on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 16 Jul 2020 19:18:25 +0800</lastBuildDate><atom:link href="https://gohalo.github.io/cn/tags/software/index.xml" rel="self" type="application/rss+xml"/><item><title>MinIO 使用详解</title><link>https://gohalo.github.io/cn/blog/minio-object-storage/</link><pubDate>Thu, 16 Jul 2020 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/minio-object-storage/</guid><description>安装 # 可以从 Download 查看不同平台的安装方法，如下以 RPM 为例，同时会包含 systemd 的配置文件。
在 /lib/systemd/system/minio.service 可以看到具体的启动命令行为 minio server $MINIO_OPTS $MINIO_VOLUMES，同时需要修改启动的用户名和用户组，修改如下配置文件后启动。
# cat /etc/default/minio MINIO_ROOT_USER=admin MINIO_ROOT_PASSWORD=password MINIO_DOMAIN=&amp;#34;minio.com&amp;#34; MINIO_VOLUMES=&amp;#34;/opt/minio/data&amp;#34; MINIO_OPTS=&amp;#34;--address :9000 --console-address :9001&amp;#34; # systemctl start minio 然后访问 http://localhost:9001 即可，注意，从 2021 版本开始，需要通过 MINIO_ROOT_USER/MINIO_ROOT_PASSWORD 替换之前的 MINIO_ACCESS_KEY/MINIO_SECRET_KEY 配置参数，其它常用配置参数可以参考：
MINIO_REGION 部署所在区域，一般通过 国家-区域-编号 表示，例如 us-west-1 。 MINIO_DOMAIN 配置后支持 Virtual Host 方式访问。 默认会使用 Path Style 也就是类似 http://xxx.com:9000/bucket/1.txt 方式访问对象，设置 MINIO_DOMAIN 参数后将会同时支持 Virtual Host Style 方式，此时桶名会作为域名，例如 http://bucket.xxx.com:9000/1.txt 这种路径。
注意，此时要同时设置域名解析，如果是本地，可以参考 DNSmasq 中的介绍，同时增加。
配置 # 同样按照上述的介绍下载客户端，最新一般是 mc 命令。</description></item><item><title>Systemd 服务管理</title><link>https://gohalo.github.io/cn/blog/linux-systemd-notify-watchdog-introduce/</link><pubDate>Mon, 27 Aug 2018 20:19:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-systemd-notify-watchdog-introduce/</guid><description>&lt;p>Systemd 提供了很多系统服务的基本功能，包括了系统的系统进程、启动级别、cgroup 管理、进程管理等等。&lt;/p>
&lt;p>这里简单介绍进程管理功能。&lt;/p></description></item><item><title>Beanstalk 使用简介</title><link>https://gohalo.github.io/cn/blog/message-queue-beanstalk-introduce/</link><pubDate>Sun, 21 Jan 2018 20:19:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/message-queue-beanstalk-introduce/</guid><description>&lt;p>这是 FaceBook 实现的一个消息队列，其协议是基于 ASCII 的，上报的数据可以通过 binlog 进行持久化，其高可用类似于 Memcached 的方式，也就是各个进程之间不知道相互的存在。&lt;/p>
&lt;p>支持优先级、延时、超时重发、预留等机制，支持分布式的后台任务和定时任务处理。&lt;/p>
&lt;p>这里简单介绍其使用方法。&lt;/p></description></item><item><title>Linux 后台服务管理</title><link>https://gohalo.github.io/cn/blog/linux-daemon-tools/</link><pubDate>Fri, 23 Dec 2016 20:19:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-daemon-tools/</guid><description>&lt;p>在 Linux 中，对于一个后台服务，如果要可靠地在后台运行，最好能监控进程状态，在意外结束时能自动重启。&lt;/p>
&lt;p>常见的功能全面的主流工具主要有 monit(C)、supervisor(Python)、goreman(Go)，其中 goreman 是对 Ruby 下广泛使用的 foreman 工具，使用 golang 的重写。&lt;/p>
&lt;p>在此，仅介绍下在 Linux 中如何使用。&lt;/p></description></item><item><title>Linux Gunplot 使用简介</title><link>https://gohalo.github.io/cn/blog/linux-gnuplot/</link><pubDate>Thu, 03 Nov 2016 20:19:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-gnuplot/</guid><description>&lt;p>主要介绍一下 Linux 中的 Gnuplot Graphviz 套件，主要用于画图。&lt;/p>
&lt;p>Ggnuplot 是一个命令行驱动的绘图工具，可将数学函数或数值资料以平面图或立体图的形式画在不同种类终端机或绘图输出装置上，是由 Colin Kelley 和 Thomas Williams 于 1986 年开发的绘图程序发展而来的，可以在多个平台下使用。&lt;/p>
&lt;p>graphviz 是贝尔实验室开发的一个开源的工具包，它使用一个特定的 DSL(领域特定语言) dot 作为脚本语言，然后使用布局引擎来解析此脚本，并完成自动布局。该软件包提供丰富的导出格式，如常用的图片格式，SVG、PDF 格式等。&lt;/p>
&lt;p>在此介绍一下常见的使用方法。&lt;/p></description></item><item><title>Redis 简介</title><link>https://gohalo.github.io/cn/blog/redis-introduce/</link><pubDate>Mon, 18 Jul 2016 18:49:39 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/redis-introduce/</guid><description>&lt;p>REmote DIctionary Server (Redis) 是一个由 Salvatore Sanfilippo 写的 KV 存储系统，采用 C 语言实现，同时提供了多种语言的 API 。&lt;/p>
&lt;p>Redis 是完全开源免费的高性能 KV 数据库，相比其它的 KV 数据库来说，Redis 还支持持久化，可以将内存中的数据保存到磁盘中，重启时再次加载；除了 KV 接口，还支持 list、set、hash 等多种数据库结构；同时支持备份以及集群模式。&lt;/p></description></item><item><title>Nginx 源码解析</title><link>https://gohalo.github.io/cn/blog/nginx-sourcecode-analyze/</link><pubDate>Tue, 28 Jun 2016 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/nginx-sourcecode-analyze/</guid><description>&lt;p>Nginx 是业界之名的高性能服务器，采用模块化实现，这里简单看下其实现方式。&lt;/p></description></item><item><title>uWSGI 简介</title><link>https://gohalo.github.io/cn/blog/uwsgi-introduce/</link><pubDate>Thu, 23 Jun 2016 20:19:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/uwsgi-introduce/</guid><description>&lt;p>这是一个 C 语言编写的 web 容器，实现了 wsgi 和 uwsig 协议，速度很快。&lt;/p></description></item><item><title>Nginx + uWSGI + Flask</title><link>https://gohalo.github.io/cn/blog/nginx-uwsgi-flask/</link><pubDate>Mon, 23 May 2016 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/nginx-uwsgi-flask/</guid><description>&lt;p>如前所述，Flask 是一个轻量级的 Web 应用框架，这里简单介绍如何通过 nginx、uwsgi 搭建 flask 环境。&lt;/p></description></item><item><title>Nginx 监控</title><link>https://gohalo.github.io/cn/blog/nginx-monitor/</link><pubDate>Sat, 30 Apr 2016 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/nginx-monitor/</guid><description>&lt;p>Nginx 服务器在生产环境中运行时，可以通过类似 Nagios、Zabbix、Munin 之类的网络监控软件。然而，很多时候处理问题时，只需要快速简单的查看当前 Nginx 服务器的状态请求。&lt;/p>
&lt;p>可以使用一个 Python 编写的工具 ngxtop，可以直接从 &lt;a href="https://github.com/lebinh/ngxtop">www.github.com&lt;/a> 上下载相应的源码。&lt;/p>
&lt;p>接下来介绍一下该工具的使用方法。&lt;/p></description></item><item><title>Nginx 日志解析</title><link>https://gohalo.github.io/cn/blog/nginx-logs/</link><pubDate>Wed, 27 Apr 2016 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/nginx-logs/</guid><description>&lt;p>在 Nginx 的统计排错过程中，通常要依赖日志，Nginx 有非常灵活的日志记录模式，每个级别的配置可以有各自独立的访问日志。&lt;/p></description></item><item><title>Nginx 通用网关</title><link>https://gohalo.github.io/cn/blog/nginx-cgi-introduce/</link><pubDate>Mon, 18 Apr 2016 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/nginx-cgi-introduce/</guid><description>&lt;p>CGI (Common Gateway Interface，通用网关接口) 描述了客户端和服务器程序之间传输数据的一种标准，可以让一个客户端，从网页浏览器向执行在网络服务器上的程序请求数据。&lt;/p>
&lt;p>在此我们看下具体的实现以及应用。&lt;/p></description></item><item><title>Nginx 入门</title><link>https://gohalo.github.io/cn/blog/nginx-introduce/</link><pubDate>Sat, 02 Apr 2016 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/nginx-introduce/</guid><description>&lt;p>Nginx (发音 &amp;ldquo;Engine X&amp;rdquo;) 是一款轻量级且高性能的 Web 服务器、反向代理服务器，同时也是一个 IMAP POP3 SMTP 服务器，完全通过 C 语言编写，支持多平台，并且在 BSD-like 协议下发行。&lt;/p>
&lt;p>是由俄罗斯的 Igor Sysoev 开发，其特点是占有内存少、并发能力强、丰富的功能集和示例配置文件。在此仅简单介绍其安装使用方法。&lt;/p></description></item><item><title>SaltStack 使用简介</title><link>https://gohalo.github.io/cn/blog/saltstack-introduce/</link><pubDate>Sat, 02 Jan 2016 18:49:39 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/saltstack-introduce/</guid><description>&lt;hr>
&lt;p>SaltStack 是一个轻量级的运维工具，具备配置管理、远程执行、监控等功能，类似于 Puppet 和 Chef，不过这两者是用 Ruby 写的，而 Salt Stack 用的是 Python。&lt;/p>
&lt;p>结下来看看具体的使用。&lt;/p></description></item><item><title>软件 DNSmasq 使用介绍</title><link>https://gohalo.github.io/cn/blog/linux-dnsmasq-introduce/</link><pubDate>Sun, 20 Dec 2015 21:50:32 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-dnsmasq-introduce/</guid><description>&lt;p>通常上网使用的 DNS 服务器都是由电信、联通等运营商提供的，或者是公用的 DNS 解析服务器，例如 Google 提供的解析器，这通常会带来些问题，如有时解析不正常、经常弹出广告等。&lt;/p>
&lt;p>有时我们需要管理 DNS 解析，如加速 DNS 的解析过程、纠正错误的 DNS 解析记录、配置局域网的 DNS 解析等等。&lt;/p>
&lt;p>DNSmasq 就是其中的一个主机上最常用的解决方案，相比 BIND 来说，其更加小巧，配置更加方便，其源码仅有 2 万多行，但足以满足常见的需求。&lt;/p></description></item><item><title>Systemd 使用简介</title><link>https://gohalo.github.io/cn/blog/linux-systemd/</link><pubDate>Thu, 17 Sep 2015 22:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-systemd/</guid><description>&lt;p>现在一般新发行的版本会采用新的 init 进程，也就是 systemd ，其中启动过程可以通过 man bootup 查看。&lt;/p>
&lt;p>在此，简单介绍一下 systemd 。&lt;/p></description></item><item><title>Nginx HTTPS 配置</title><link>https://gohalo.github.io/cn/blog/security-ssl-tls-nginx-https-setting/</link><pubDate>Sat, 27 Dec 2014 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/security-ssl-tls-nginx-https-setting/</guid><description>&lt;p>简单介绍如何使用 Nginx 搭建 https 服务。&lt;/p></description></item><item><title>Awesome Projects</title><link>https://gohalo.github.io/cn/blog/awesome-projects/</link><pubDate>Sun, 25 May 2014 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/awesome-projects/</guid><description/></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>k8s on</title><link>https://gohalo.github.io/cn/tags/k8s/</link><description>Recent content in k8s on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 22 Dec 2021 19:40:02 +0800</lastBuildDate><atom:link href="https://gohalo.github.io/cn/tags/k8s/index.xml" rel="self" type="application/rss+xml"/><item><title>K8S 配置上下文介绍</title><link>https://gohalo.github.io/cn/blog/kubernets-config-context/</link><pubDate>Wed, 22 Dec 2021 19:40:02 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/kubernets-config-context/</guid><description>&lt;p>通常在开发过程中需要维护多个集群，例如研发、测试、生产等，为了方便管理可以通过 kubeconfig 维护集群、用户、命名空间、身份认证相关的信息，用来快速切换访问的集群。&lt;/p></description></item><item><title>K8S 常用命令</title><link>https://gohalo.github.io/cn/blog/kubernets-commands-usage/</link><pubDate>Fri, 22 Oct 2021 19:43:02 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/kubernets-commands-usage/</guid><description>&lt;p>整理下 K8S 的常用命令，以供参考。&lt;/p></description></item><item><title>通过 go-client 访问 K8S 集群</title><link>https://gohalo.github.io/cn/blog/kubernets-source-code-go-client/</link><pubDate>Tue, 12 Oct 2021 23:11:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/kubernets-source-code-go-client/</guid><description>&lt;p>&lt;code>client-go&lt;/code> 是用 GoLang 编写的官方编程式交互客户端库，提供对 Kubernetes API Server 服务的交互访问，也是 Kubernetes 的核心处理框架，其源码中已经集成了 &lt;code>client-go&lt;/code> 的源码，无需单独下载。&lt;/p></description></item><item><title>K8S 简单安装部署服务</title><link>https://gohalo.github.io/cn/blog/kubernets-simple-install/</link><pubDate>Sun, 01 Aug 2021 21:15:32 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/kubernets-simple-install/</guid><description>&lt;p>现在很多的 K8S 部署是通过容器安装的，这里介绍如何在物理机上独立部署，这也是最简单的方式。&lt;/p></description></item><item><title>K8S 制作离线镜像</title><link>https://gohalo.github.io/cn/blog/kubernets-create-offline-images/</link><pubDate>Thu, 16 Jul 2020 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/kubernets-create-offline-images/</guid><description>&lt;p>大部分的镜像制作都是通过 Dockerfile 来实现的，基本都是基于基础镜像制作，这里介绍使用 &lt;code>buildah&lt;/code> 来构建基础镜像，可以以此理解其基本原理。&lt;/p></description></item><item><title>K8S 本地集群 Kind 使用介绍</title><link>https://gohalo.github.io/cn/blog/kubernets-minimal-kind-cluster/</link><pubDate>Fri, 12 Nov 2010 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/kubernets-minimal-kind-cluster/</guid><description>&lt;p>kind 是 Kubernetes in Docker 的简写，是一个使用 Docker 容器作为 Nodes，在本地创建和运行 Kubernetes 群集的工具，适用于在本机创建 Kubernetes 群集环境进行开发和测试，而且支持离线部署。&lt;/p></description></item></channel></rss>
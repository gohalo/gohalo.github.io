<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>topic on</title><link>https://gohalo.github.io/cn/tags/topic/</link><description>Recent content in topic on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 21 Dec 2010 21:18:34 +0800</lastBuildDate><atom:link href="https://gohalo.github.io/cn/tags/topic/index.xml" rel="self" type="application/rss+xml"/><item><title>【专题】数据仓库</title><link>https://gohalo.github.io/cn/blog/topic-warehouse-introduce/</link><pubDate>Tue, 21 Dec 2010 21:18:34 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-warehouse-introduce/</guid><description/></item><item><title>【专题】数据库之 RocksDB</title><link>https://gohalo.github.io/cn/blog/topic-database-rocksdb/</link><pubDate>Tue, 21 Dec 2010 21:18:34 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-database-rocksdb/</guid><description/></item><item><title>【专题】Web 前端编程语言</title><link>https://gohalo.github.io/cn/blog/topic-language-webs/</link><pubDate>Wed, 15 Dec 2010 22:10:52 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-language-webs/</guid><description>前端 # 在前端的页面中，核心包括了三部分：
HTML 主要包括了文字、图片、链接，其它还有音乐、程序等非文字元素的标记语言； CSS 可以定制化 HTML 中元素显示的样式，从而更加美观； JavaScript 一种解释性脚本语言，可以用来给 HTML 页面增加动态、交互功能。 HTML 用于创建网页的标记语言。 CSS # 基本概念 包括基本语法、样式、盒子模型等概念，还可以参考 示例 代码，另外还有 选择器 。 SCSS 语法 在 SASS3 引入的新语法，完全监控 CSS3 并继承了 SASS 强大能力。 JavaScript # 基本语法 简单介绍纯原生的核心语法，以及常用示例。 TypeScript 详细介绍 TS 的基础语法。 React # React 是一个用于构建用户界面的 JavaScript 库，起源于 FaceBook 的内部项目。
基本介绍 介绍基础的 React 使用。 简明教程 一步步简单介绍 React 中的基本概念以及使用方法。 Router 详细介绍 React Router Dom V6 的使用方式。 常用工具 # npm 介绍 npm 以及常用的配置方式。 webpack 这是前端使用最为广泛的打包工具，可以大大提高工作效率。 参考 # 关于当前浏览器如何工作的，可以参考 how browsers work 以及 mozilla.</description></item><item><title>【专题】C/C++ 编程语言</title><link>https://gohalo.github.io/cn/blog/topic-language-c-cpp/</link><pubDate>Fri, 12 Nov 2010 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-language-c-cpp/</guid><description>C 语言 # 在 1989 年，美国国家标准协会 (ANSI) 对 C 语言进行了标准化，此时 C 语言又被称为 ANSI C。在一年后被国际标准化组织 ISO 采纳，所以 C 语言在 ISO 中有了一个官方名称 ISO/IEC 9899:1990 ，其中 9899 是 C 语言在 ISO 标准中代号 (C++ 是 14882)，冒号后面的 1990 表示当前修订好的版本是在 1990 年发布。
所以，最开始的 C 语言标准也被称为 C89、C90 或者 C89/C90，后续又在 1999、2007、2011 进行了改进。另外，C++ 在从 C++11 之后，基本固定每三年发布一个新版本。
整数介绍 包括了类型提升、整型溢出等。 宏使用 一些基本使用规则，以及常见注意事项。 数据对齐 结构体以及内存的对齐方式。 指针简介 包括了基本概念、函数指针等概念的介绍。 位域和字节序 位域或位段相关概念，以及大小端字节序相关的内容。 inline 简介 有点类似于 C 中的宏，但是又有所区别。 Volatile 简介 C 语言中与 volatile 相关的介绍。 基本概念 # 不只是 C 相关代码，实际上更多的是 Linux 中的基本介绍。</description></item><item><title>【专题】PostgreSQL 关系型数据库</title><link>https://gohalo.github.io/cn/blog/topic-database-postgresql/</link><pubDate>Fri, 12 Nov 2010 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-database-postgresql/</guid><description/></item><item><title>【专题】Python 编程语言</title><link>https://gohalo.github.io/cn/blog/topic-language-python/</link><pubDate>Sun, 17 Oct 2010 18:39:18 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-language-python/</guid><description>&lt;p>Python 是一种解释型语言，提供了跨平台的支持，可以快速开发一些脚本，随着 AI 的兴起，提供了一些常见的开发框架，这里详解介绍 Python 的使用。&lt;/p></description></item><item><title>【专题】Rust 编程语言</title><link>https://gohalo.github.io/cn/blog/topic-language-rust/</link><pubDate>Sat, 16 Oct 2010 19:39:18 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-language-rust/</guid><description>&lt;p>可以将 Rust 理解为 C 的直接替代品，提供了系统级的性能，而且在很多方面更好，最常提到的就是内存安全，并且可以与遗留 C 代码原生互操作以进行增量替换。&lt;/p></description></item><item><title>【专题】GoLang 编程语言</title><link>https://gohalo.github.io/cn/blog/topic-language-golang/</link><pubDate>Wed, 06 Oct 2010 19:29:18 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-language-golang/</guid><description>&lt;p>GoLang 是谷歌 2009 年发布的开源编程语言，其开发人员都是计算机界大神一般的存在，提供了便捷的协程使用，具有很高的并发性。目前很多 Cloud Native 软件都是通过 GoLang 编写，例如 Docker、K8S、LXD 等等。&lt;/p></description></item><item><title>【专题】数据库之 SQLite</title><link>https://gohalo.github.io/cn/blog/topic-database-sqlite/</link><pubDate>Wed, 25 Aug 2010 21:18:34 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-database-sqlite/</guid><description/></item><item><title>【专题】数据库之时序数据库</title><link>https://gohalo.github.io/cn/blog/topic-database-time-series/</link><pubDate>Wed, 25 Aug 2010 21:18:34 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-database-time-series/</guid><description/></item><item><title>【专题】数据库之 ETCD</title><link>https://gohalo.github.io/cn/blog/topic-database-etcd/</link><pubDate>Sat, 21 Aug 2010 21:18:34 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-database-etcd/</guid><description> PAXOS 算法从 90 年提出到现在已经有二十几年了，不过其流程过于复杂，目前较多的有 Chubby、libpaxos ，以及 Zookeeper 修改后的 Zookeeper Atomic Broadcase, ZAB 。
RAFT 是斯坦福的 Diego Ongaro、John Ousterhout 两人设计的一致性算法，在 2013 年发布了论文 《In Search of an Understandable Consensus Algorithm》，目前已经有近十多种语言的实现，其中使用较多的是 ETCD 。
RAFT 一个为真实世界应用建立的协议，注重落地性和可理解性。 基本介绍 主要介绍 ETCD 如何使用，包括安装、部署、使用以及常见的介绍。 示例源码 源码中关于如何 RAFT 协议的示例代码，直接使用的是内存数据库。 源码解析 除了上述的示例代码，这里简单介绍其代码的实现。 网络模块 包括了集群节点内部网络通讯，除此之外还有客户端与服务器之间的通讯。 存储模块 核心的 RAFT 协议已经实现，不过存储模块需要单独实现，提供了 BoltDB 作为存储。 一致性读 一致性越强，代价越高，同时应用也越友好。</description></item><item><title>【主题】人工智能</title><link>https://gohalo.github.io/cn/blog/topic-artificial-intelligence/</link><pubDate>Mon, 16 Aug 2010 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-artificial-intelligence/</guid><description/></item><item><title>【专题】Lua 编程语言</title><link>https://gohalo.github.io/cn/blog/topic-language-lua/</link><pubDate>Thu, 12 Aug 2010 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-language-lua/</guid><description>&lt;p>Lua 在葡萄牙语中是 &amp;ldquo;月亮&amp;rdquo; 的意思，是一个小巧的脚本语言，官方版本只包括一个精简的核心和最基本的库，使得其体积小、启动速度快，从而特别适合嵌入到其它程序里。&lt;/p></description></item><item><title>【专题】MySQL 数据库</title><link>https://gohalo.github.io/cn/blog/topic-database-mysql/</link><pubDate>Thu, 22 Jul 2010 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-database-mysql/</guid><description>&lt;p>MySQL 是一款最流行的开源关系型数据库，最初由瑞典的 MySQL AB 公司开发，目前已被 Oracle 收购，虽然如此，但是仍然在不断的向前发展。&lt;/p>
&lt;p>这里详细介绍概念。&lt;/p></description></item><item><title>【专题】算法详解</title><link>https://gohalo.github.io/cn/blog/topic-algorithm/</link><pubDate>Fri, 16 Jul 2010 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-algorithm/</guid><description>&lt;p>包括常见的基础数据结构、算法，也包含了类似 LeetCode 的刷题技巧。&lt;/p></description></item><item><title>【专题】开发环境</title><link>https://gohalo.github.io/cn/blog/topic-develop-workspace/</link><pubDate>Sat, 12 Jun 2010 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-develop-workspace/</guid><description>Git # Git 是一免费、开源的分布式版本控制系统，可有效、高速的处理从很小到非常大的项目版本管理，该工具是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发，其本意是为了替换 BitKeeper 。
除了 GitHub 外，开源的工具还有 GitLab、Gogs，以及 C 的相关库 libgit2 。
这里简单介绍一下常见概念及其操作。
简明教程 介绍常见的基础操作，以及相关的配置。 分支模型 git 提供了很方便的分支管理，通过规范化的管理策略可以简化版本维护成本。 对象简介 内部使用一组极为简洁的数据结构来维护，也就是对象。 常用技巧 # 免密登录 这里介绍对于 http 和 ssh 访问时如何免除密码输入。 子模块使用 可以将其它的库作为模块添加，这样就可以方便管理。 补丁管理 可以通过 git 生成补丁文件，然后可以在 Linux 中通过命令打补丁。 换行符切换 在 Window 和 Linux 上的换行符是不同的，可以自动进行切换。 多源管理 介绍如何将一个本地仓库同步到不同的远端仓库中。 统计工具 对于一些常见指标的统计。 LFS 使用 由 GitHub 实现的一种处理大文件的解决方案。 开源流程 这里以 GitHub 为例简单介绍一个常用的提交流程。 常见问题 整理下 git 中常见的问题、解决方案以及相关原因，同时包含 github 代理。 使用杂项 记录 git 常见的示例，可以用来作为参考使用，也就是 Cheatsheet 参考。 参考 # 下载加速 长期维护的代理、Hosts 等信息，海外下载可以使用 果冻网络加速 进行代理。 CICD # 用于搭建开发、自动部署等平台。</description></item><item><title>【专题】Linux 内核详解</title><link>https://gohalo.github.io/cn/blog/topic-linux-kernel/</link><pubDate>Fri, 21 May 2010 20:19:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-linux-kernel/</guid><description/></item><item><title>【专题】Java 编程语言</title><link>https://gohalo.github.io/cn/blog/topic-language-java/</link><pubDate>Thu, 06 May 2010 19:29:18 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-language-java/</guid><description>&lt;p>Java 是由 Sun Microsystems 公司于 1995 年 5 月推出的高级程序设计语言，可运行于多个平台，如 Windows、Mac OS 及其它多种类 UNIX 版本的系统，包括 Linux 系统。&lt;/p></description></item><item><title>【专题】Linux 监控调优</title><link>https://gohalo.github.io/cn/blog/topic-linux-monitor/</link><pubDate>Wed, 21 Apr 2010 20:19:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-linux-monitor/</guid><description>系统监控 # 记录与监控相关的内容。
网络监控 包含一些异常的处理，例如丢包、内存不足等。 进程监控 与进程相关的一些监控指标。 内存监控 主要介绍 proc 文件系统的统计。 IO 监控 包括常见的 IO 监控工具，同时也包含测试相关的内容。 CGroup 监控 通过 proc 文件系统可以查看某个 cgroup 组的性能指标。 监控工具 简单列举一些常见的监控工具 (sar top ps)、配置方式以及多线程相关等。 CPU 物理结构 简单介绍 CPU 物理结构，以及 如何在 Linux 中查看 CPU 信息 。 Network # 网络配置 常见的如主机名、网卡、路由等的配置。 状态查看 主要是网络状态查看，例如正在监听的端口信息。 其它 # tcprstat 可以用来统计服务端的数据处理时间，包括了最大最小值等统计信息。 collectd 一个 C 语言编写的多线程监控采集程序，同时可以参考 源码解析 。 dstat 一个使用 Python 编写的跨平台监控工具，包含系统监控，还可以通过插件扩展。 sysbench 不错的压测工具，通常用于数据库，不过也有系统性能压测。 prometheus 当前最常用的监控系统，包含了存储，还有 Grafana 展示等。 statsd 十分简单的监控协议，默认通过 JavaScript 实现，不过当前有很多其它语言实现。 netlink 类似于 TCP/IP 的内核通讯机制，用于在内核态和用户态之间传递数据。 zabbix 历史悠久、成熟的开源监控系统，提供了灵活的 API 接口。 系统配置 常见的相关配置，例如 swap、sysctl 等。 性能调优 # 可以使用 CPU 性能计数器、tracepoints、kprobes、uprobes 对程序的各个指标进行统计。</description></item><item><title>【专题】Linux 网络相关</title><link>https://gohalo.github.io/cn/blog/topic-linux-network/</link><pubDate>Sat, 10 Apr 2010 20:19:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-linux-network/</guid><description/></item><item><title>【专题】Linux 安全相关</title><link>https://gohalo.github.io/cn/blog/topic-linux-security/</link><pubDate>Sat, 27 Mar 2010 21:18:34 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-linux-security/</guid><description>&lt;p>介绍 Linux 中与安全相关的内容，例如 SSH、SELinux 等，当然，也包括了一些安全相关基本的概念，例如加密算法、TLS 等等，这里作为一个专题介绍一些常见概念。&lt;/p></description></item><item><title>【专题】Linux 容器介绍</title><link>https://gohalo.github.io/cn/blog/topic-linux-container/</link><pubDate>Fri, 12 Mar 2010 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-linux-container/</guid><description>&lt;p>Linux 内核提供了 cgroup 以及 namespace 的基本隔离手段，然后在此基础上，提供了更上层的封装，包括了 Docker、rkt、PouchContainer 以及最新的 Podman 等等。&lt;/p></description></item><item><title>【专题】Linux 环境搭建</title><link>https://gohalo.github.io/cn/blog/topic-linux-environment-setup/</link><pubDate>Thu, 25 Feb 2010 22:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-linux-environment-setup/</guid><description>&lt;p>Linux 有多个发行版本，其中 RedHat、Debian 及其衍生版本占了很大一部分，大部分的基本功能相似，但是环境又略有区别，这里简单介绍其基础的环境使用，以及一些常见概念。&lt;/p></description></item><item><title>【专题】并发编程</title><link>https://gohalo.github.io/cn/blog/topic-concurrency-program/</link><pubDate>Tue, 26 Jan 2010 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-concurrency-program/</guid><description/></item></channel></rss>
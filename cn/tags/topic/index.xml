<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Topic on</title><link>https://gohalo.github.io/cn/tags/topic/</link><description>Recent content in Topic on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 02 Sep 2022 21:14:02 +0800</lastBuildDate><atom:link href="https://gohalo.github.io/cn/tags/topic/index.xml" rel="self" type="application/rss+xml"/><item><title>NeoVim 基本环境配置</title><link>https://gohalo.github.io/cn/blog/neovim-basic-usage/</link><pubDate>Fri, 02 Sep 2022 21:14:02 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/neovim-basic-usage/</guid><description>&lt;p>最开始 NeoVim 是 Vim 的功能增强，但是随着不断开发，功能越来越完善，而且已经分道扬镳，现在已经成为了更加接近现代的开发工具，尤其是随着 &lt;a href="https://neovim.io/charter/">Vision&lt;/a> 计划的开发，也包括了其子项目 &lt;a href="https://tree-sitter.github.io/tree-sitter/">Tree-sitter&lt;/a>。&lt;/p></description></item><item><title>Kubernets 网络示例</title><link>https://gohalo.github.io/cn/blog/kubernets-examples-nginx/</link><pubDate>Fri, 19 Mar 2021 21:19:12 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/kubernets-examples-nginx/</guid><description>&lt;p>这里以 Nginx 为例，介绍几种常见的网络模型。&lt;/p></description></item><item><title>Kubernetes 基本介绍</title><link>https://gohalo.github.io/cn/blog/kubernets-basic-introduce/</link><pubDate>Thu, 10 Dec 2020 21:50:32 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/kubernets-basic-introduce/</guid><description/></item><item><title>【专题】MySQL 数据库</title><link>https://gohalo.github.io/cn/blog/topic-database-mysql/</link><pubDate>Thu, 16 Jul 2020 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-database-mysql/</guid><description>&lt;p>MySQL 是一款最流行的开源关系型数据库，最初由瑞典的 MySQL AB 公司开发，目前已被 Oracle 收购，虽然如此，但是仍然在不断的向前发展。&lt;/p>
&lt;p>这里详细介绍概念。&lt;/p></description></item><item><title>CentOS 安装与配置</title><link>https://gohalo.github.io/cn/blog/centos-config-from-scratch/</link><pubDate>Thu, 16 Jul 2020 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/centos-config-from-scratch/</guid><description>&lt;p>CentOS (Community Enterprise Operating System) 也即社区版的企业操作系统，是 Linux 发行版本之一，来自于 Red Hat Enterprise Linux 所开放的源码编译而成。因此，对稳定性较高的服务器通常以 CentOS 替代商业版的 Red Hat 。&lt;/p>
&lt;p>两者的不同在于 CentOS 并不包含封闭源代码软件。下面会介绍桌面版的 CentOS 在安装时需要作的一些常用配置。&lt;/p></description></item><item><title>GoLang 实现 SSH 相关示例</title><link>https://gohalo.github.io/cn/blog/ssh-golang-examples/</link><pubDate>Tue, 26 Jul 2016 20:28:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/ssh-golang-examples/</guid><description>&lt;p>GoLang 提供了基础的 SSH 库，可以用来作为服务端或者客户端使用，这里整理了常见的用法。&lt;/p></description></item><item><title>软件 DNSmasq 使用介绍</title><link>https://gohalo.github.io/cn/blog/linux-dnsmasq-introduce/</link><pubDate>Sun, 20 Dec 2015 21:50:32 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-dnsmasq-introduce/</guid><description>&lt;p>通常上网使用的 DNS 服务器都是由电信、联通等运营商提供的，或者是公用的 DNS 解析服务器，例如 Google 提供的解析器，这通常会带来些问题，如有时解析不正常、经常弹出广告等。&lt;/p>
&lt;p>有时我们需要管理 DNS 解析，如加速 DNS 的解析过程、纠正错误的 DNS 解析记录、配置局域网的 DNS 解析等等。&lt;/p>
&lt;p>DNSmasq 就是其中的一个主机上最常用的解决方案，相比 BIND 来说，其更加小巧，配置更加方便，其源码仅有 2 万多行，但足以满足常见的需求。&lt;/p></description></item><item><title>【专题】Web 前端编程语言</title><link>https://gohalo.github.io/cn/blog/topic-language-webs/</link><pubDate>Wed, 15 Dec 2010 22:10:52 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-language-webs/</guid><description>CSS # 基本概念 包括基本语法、样式、盒子模型等概念。 SCSS 语法 在 SASS3 引入的新语法，完全监控 CSS3 并继承了 SASS 强大能力。 其它 # RestAPI 最佳实践 相对来说使用比较广泛的前后端交互接口，也包含了常见的 OpenAPI 等规范。</description></item><item><title>【专题】C/C++ 编程语言</title><link>https://gohalo.github.io/cn/blog/topic-language-c-cpp/</link><pubDate>Fri, 12 Nov 2010 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-language-c-cpp/</guid><description>C # 链接顺序 静态库的不同顺序会影响最终二进制的生成，这里简单介绍。 动态参数 在函数传参过程中允许使用多个动态参数，这里介绍如何使用以及其原理。 强弱符号 编译过程中提供了强弱符号的概念，可以用于简单的覆盖。 CPP # 基本概念 介绍基本的语法，例如封装、继承、多态、多线程等等。 构造析构 在对象内存申请完之后会通过构造函数初始化，不同场景包含了多种构造函数。 强制转换 按照不同的场景提供了不同的类型转换方法，这样在异常是可以及时发现。 右值引用 按照不同的场景提供了不同的类型转换方法，这样在异常是可以及时发现。 Linux 编程 # 在 Linux 环境下会有不同的实现。
网络编程 网络编程中的基本概念，例如结构体、域名解析、IP 地址等。 工具解析 介绍一些在 Linux 常用的二进制解析工具。 进程创建 Linux 中有多种子进程的创建方式，这里详细介绍其用法。 单元测试 编译过程中提供了强弱符号的概念，可以用于类似单元测试的场景。 内存检查 # Valgrind 介绍一些在 Linux 常用的二进制解析工具。 GDB # GDB 是一个很强大的调试工具，支持远程调试、嵌入式调试、输出的重定向。
基本介绍 简单介绍其常用的功能，包括 watchpoint、catchpoint 等内容。 调试格式 这里对标准的 DWARF 格式进行详细介绍。 栈帧分析 栈是一块内存空间，会从高地址向低地址增长，用于保存临时变量、传参等。 初始脚本 启动时会默认加载初始化脚本，通常是部分命令配置以及一些复杂函数。 Python脚本 在 7.X 之后的版本中增加了 Python 脚本支持，比之前的 DSL 实现要强大很多。 LLVM # 基本介绍 Test # 测试主要是为了可以提前发现异常，尤其是当重构时，可以进行完整的验证，所以，就慢慢衍生出了所谓 Test Drived Develop, TDD，而且产生了很多测试方法。</description></item><item><title>【专题】Python 编程语言</title><link>https://gohalo.github.io/cn/blog/topic-language-python/</link><pubDate>Sun, 17 Oct 2010 18:39:18 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-language-python/</guid><description>&lt;p>Python 是一种解释型语言，提供了跨平台的支持，可以快速开发一些脚本，随着 AI 的兴起，提供了一些常见的开发框架，这里详解介绍 Python 的使用。&lt;/p></description></item><item><title>【专题】Rust 编程语言</title><link>https://gohalo.github.io/cn/blog/topic-language-rust/</link><pubDate>Sat, 16 Oct 2010 19:39:18 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-language-rust/</guid><description>&lt;p>可以将 Rust 理解为 C 的直接替代品，提供了系统级的性能，而且在很多方面更好，最常提到的就是内存安全，并且可以与遗留 C 代码原生互操作以进行增量替换。&lt;/p></description></item><item><title>【专题】GoLang 编程语言</title><link>https://gohalo.github.io/cn/blog/topic-language-golang/</link><pubDate>Wed, 06 Oct 2010 19:29:18 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-language-golang/</guid><description>&lt;p>GoLang 是谷歌 2009 年发布的开源编程语言，其开发人员都是计算机界大神一般的存在，提供了便捷的协程使用，具有很高的并发性。目前很多 Cloud Native 软件都是通过 GoLang 编写，例如 Docker、K8S、LXD 等等。&lt;/p></description></item><item><title>【专题】开发环境</title><link>https://gohalo.github.io/cn/blog/topic-develop-workspace/</link><pubDate>Sat, 12 Jun 2010 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-develop-workspace/</guid><description>Git # Git 是一免费、开源的分布式版本控制系统，可有效、高速的处理从很小到非常大的项目版本管理，该工具是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发，其本意是为了替换 BitKeeper 。
除了 GitHub 外，开源的工具还有 GitLab、Gogs，以及 C 的相关库 libgit2 。
这里简单介绍一下常见概念及其操作。
常用技巧 # 免密登录 这里介绍对于 http 和 ssh 访问时如何免除密码输入。 子模块使用 可以将其它的库作为模块添加，这样就可以方便管理。 补丁管理 可以通过 git 生成补丁文件，然后可以在 Linux 中通过命令打补丁。 多源管理 介绍如何将一个本地仓库同步到不同的远端仓库中。 开源流程 这里以 GitHub 为例简单介绍一个常用的提交流程。 常见问题 整理下 git 中常见的问题、解决方案以及相关原因。 CICD # 用于搭建开发、自动部署等平台。
gogs 类似 GitLab 或者 GitHub 的 git 仓库，但是搭建起来更容易搭建，比较适合个人开发。 drone 类似于 Jenkins ，一个基于容器的持续交付平台，支持 Pipeline 的定义，基于 GoLang 开发。 VIM # 一个功能强大、高度可定制的文本编辑器，与其相匹敌的是 Emacs ，这两个都是不错的编辑器，在此不再比较两者的优劣，仅介绍 VIM 相关的内容。</description></item><item><title>Neovim 插件管理工具</title><link>https://gohalo.github.io/cn/blog/neovim-plugins-management/</link><pubDate>Sat, 12 Jun 2010 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/neovim-plugins-management/</guid><description>&lt;p>从 Neovim 0.5 版本开始，一般推荐使用 Lua 原生的 &lt;code>packer.nvim&lt;/code> 做插件管理，现在大多数插件都支持该管理工具。&lt;/p>
&lt;p>这里详细介绍其使用。&lt;/p></description></item><item><title>【专题】Linux 监控调优</title><link>https://gohalo.github.io/cn/blog/topic-linux-monitor/</link><pubDate>Wed, 21 Apr 2010 20:19:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-linux-monitor/</guid><description>系统监控 # CPU # Linux 监控之 CPU 简单介绍下 Linux 中与 CPU 监控相关的内容。 Network # 网络配置 常见的如主机名、网卡、路由等的配置。 状态查看 主要是网络状态查看，例如正在监听的端口信息。 其它 # 系统配置 常见的相关配置，例如 swap、sysctl 等。 性能调优 # 可以使用 CPU 性能计数器、tracepoints、kprobes、uprobes 对程序的各个指标进行统计。
Perf 随内核发布的一个老牌的性能诊断工具。</description></item><item><title>【专题】Linux 网络协议</title><link>https://gohalo.github.io/cn/blog/topic-linux-network/</link><pubDate>Sat, 10 Apr 2010 20:19:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-linux-network/</guid><description>其它 # 简单介绍一些与网络相关的通讯协议。
socks5 详细介绍代理协议。</description></item><item><title>【专题】Linux 安全相关</title><link>https://gohalo.github.io/cn/blog/topic-linux-security/</link><pubDate>Sat, 27 Mar 2010 21:18:34 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-linux-security/</guid><description>&lt;p>介绍 Linux 中与安全相关的内容，例如 SSH、SELinux 等，当然，也包括了一些安全相关基本的概念，例如加密算法、TLS 等等。&lt;/p>
&lt;p>这里作为一个专题介绍一些常见概念。&lt;/p></description></item><item><title>【专题】Linux 容器介绍</title><link>https://gohalo.github.io/cn/blog/topic-linux-container/</link><pubDate>Fri, 12 Mar 2010 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-linux-container/</guid><description/></item><item><title>【专题】Linux 环境搭建</title><link>https://gohalo.github.io/cn/blog/topic-linux-environment-setup/</link><pubDate>Thu, 25 Feb 2010 22:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-linux-environment-setup/</guid><description>&lt;p>Linux 有多个发行版本，其中 RedHat、Debian 及其衍生版本占了很大一部分，大部分的基本功能相似，但是环境又略有区别，这里简单介绍其基础的环境使用，以及一些常见概念。&lt;/p></description></item></channel></rss>
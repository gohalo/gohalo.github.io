<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>leetcode on</title><link>https://gohalo.github.io/cn/tags/leetcode/</link><description>Recent content in leetcode on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 23 May 2021 17:30:15 +0800</lastBuildDate><atom:link href="https://gohalo.github.io/cn/tags/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>树状数组详解</title><link>https://gohalo.github.io/cn/blog/binary-indexed-tree/</link><pubDate>Sun, 23 May 2021 17:30:15 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/binary-indexed-tree/</guid><description>&lt;p>树状数组 Binary Indexed Tree 或以作者名字命名为 Fenwick Tree，最早由 Peter M. Fenwick 在 1994 年发表的 &lt;a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.14.8917">A New Data Structure for Cumulative Frequency Tables&lt;/a>，起初是为了解决 Cumulative Frequency 的计算，现在也用于高效计算数列的前缀和、区间和。&lt;/p>
&lt;p>这里详细介绍其原理以及实现方式。&lt;/p></description></item><item><title>二分查找详解 (闭区间)</title><link>https://gohalo.github.io/cn/blog/algorithm-binary-search-other/</link><pubDate>Wed, 20 Nov 2019 22:28:19 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/algorithm-binary-search-other/</guid><description>&lt;p>之前的文章已经详细介绍了二分查找，不过使用的是闭区间，这里再介绍一下开区间的实现细节，两种方法基本没有区别，可以选择其中一个。&lt;/p></description></item><item><title>二分查找详解</title><link>https://gohalo.github.io/cn/blog/algorithm-binary-search/</link><pubDate>Wed, 20 Nov 2019 19:58:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/algorithm-binary-search/</guid><description>&lt;p>二分查找 (Binary Search) 是一种效率较高的查找方法，不过其对保存的数据有所要求，数据需要线性顺序存储，同时需要保证数据是有序排列的。&lt;/p>
&lt;p>虽然二分查找的思路很简单，却有很多的细节问题，如整型溢出、边界的递进等等，这里详细介绍其使用方法。&lt;/p></description></item><item><title>洗牌算法</title><link>https://gohalo.github.io/cn/blog/algorithm-shuffling-method-introduce/</link><pubDate>Thu, 01 Aug 2019 22:28:19 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/algorithm-shuffling-method-introduce/</guid><description>&lt;p>需要保证是一个公平的随机算法，首先介绍如何打乱，然后是如何判断已经打乱，也就是符合均匀分布，满足公平。&lt;/p></description></item><item><title>基本算法介绍</title><link>https://gohalo.github.io/cn/blog/algorithm-basic-concept/</link><pubDate>Wed, 20 Feb 2019 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/algorithm-basic-concept/</guid><description>&lt;p>这里简单介绍一下递归、分治算法、动态规划、贪心算法、回溯算法的区别和联系。&lt;/p></description></item></channel></rss>
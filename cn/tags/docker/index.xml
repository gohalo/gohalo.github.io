<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on</title><link>https://gohalo.github.io/cn/tags/docker/</link><description>Recent content in docker on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 20 Sep 2021 23:10:15 +0800</lastBuildDate><atom:link href="https://gohalo.github.io/cn/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker 使用简介</title><link>https://gohalo.github.io/cn/blog/docker-basic-introduce/</link><pubDate>Mon, 20 Sep 2021 23:10:15 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/docker-basic-introduce/</guid><description>&lt;p>从 Docker 1.11 开始，Docker 容器运行已经不是简单的通过 Docker Daemon 启动，而是集成了 containerd、runC 等多个组件，在 Docker 服务启动之后，可以看到系统上启动了 dockerd、containerd 等进程。&lt;/p>
&lt;p>这里简单介绍一些与 Docker 相关的基本概念。&lt;/p></description></item><item><title>Docker 镜像分析工具 Dive 简介</title><link>https://gohalo.github.io/cn/blog/docker-image-layers-analyze/</link><pubDate>Wed, 21 Jul 2021 22:18:19 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/docker-image-layers-analyze/</guid><description>&lt;p>Docker 的容器镜像是一层层叠加的，可以通过 &lt;code>docker inspect&lt;/code> 命令查看镜像中的 meta 信息，或者通过 &lt;code>docker history&lt;/code> 了解镜像的构建历史，不过相对来说不够清晰。&lt;/p>
&lt;p>这里介绍一个很好用的工具 Dive 。&lt;/p></description></item><item><title>Docker 示例 Alpine + OpenSSH</title><link>https://gohalo.github.io/cn/blog/docker-example-sshd/</link><pubDate>Thu, 16 Jul 2020 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/docker-example-sshd/</guid><description>&lt;p>SSH 是最常见的远程连接协议，这里通过 Alpine 和 OpenSSH 搭建一个示例。&lt;/p></description></item><item><title>Dockerfile 简介</title><link>https://gohalo.github.io/cn/blog/docker-dockerfile/</link><pubDate>Thu, 11 Jul 2019 21:48:10 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/docker-dockerfile/</guid><description>&lt;p>Dockerfile 可以用来创建一个镜像，允许在该文件中调用一些命令行中的命令，这样可以利用一个基础镜像，然后附加一些基础操作，最后直接自动生成新镜像。&lt;/p></description></item></channel></rss>
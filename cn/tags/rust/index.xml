<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rust on</title><link>https://gohalo.github.io/cn/tags/rust/</link><description>Recent content in rust on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 15 Dec 2023 20:02:47 +0800</lastBuildDate><atom:link href="https://gohalo.github.io/cn/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust 生命周期管理</title><link>https://gohalo.github.io/cn/blog/rust-life-time/</link><pubDate>Fri, 15 Dec 2023 20:02:47 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/rust-life-time/</guid><description/></item><item><title>Rust 命令行参数解析库</title><link>https://gohalo.github.io/cn/blog/rust-third-clap/</link><pubDate>Sun, 10 Sep 2023 18:39:45 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/rust-third-clap/</guid><description>&lt;p>当使用命令行时，参数管理通常比较复杂，尤其是随着子参数增多，通过 clap 三方库可以很方便进行管理。&lt;/p></description></item><item><title>Rust 常用日志三方库介绍</title><link>https://gohalo.github.io/cn/blog/rust-third-log/</link><pubDate>Wed, 09 Nov 2022 20:45:52 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/rust-third-log/</guid><description>&lt;p>类似于 JAVA 中的 &lt;code>slf4j&lt;/code> 库，Rust 中对应了 &lt;code>log&lt;/code> 库，其提供了基本的标准接口，由官方进行维护，这里简单介绍。&lt;/p></description></item><item><title>Cargo 包管理工具</title><link>https://gohalo.github.io/cn/blog/rust-cargo-package-management/</link><pubDate>Wed, 26 Oct 2022 22:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/rust-cargo-package-management/</guid><description>&lt;p>Rust 提供了 Cargo 的构建系统和软件包管理器，可以用来构建代码、下载库或依赖项等等，在安装 Rust 时会同时安装 Cargo 相关的程序。&lt;/p>
&lt;p>这里详细介绍 Cargo 的使用方式。&lt;/p></description></item><item><title>Rust 模式匹配详解</title><link>https://gohalo.github.io/cn/blog/rust-syntax-match/</link><pubDate>Thu, 20 Oct 2022 23:05:32 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/rust-syntax-match/</guid><description>&lt;p>在 Rust 中没有 &lt;code>switch&lt;/code> 语句，但是提供了匹配器 &lt;code>matcher&lt;/code>，相比其它语言中的 &lt;code>switch&lt;/code> 要更强大。&lt;/p></description></item><item><title>Rust 常用标准库介绍</title><link>https://gohalo.github.io/cn/blog/rust-standard-library/</link><pubDate>Wed, 19 Oct 2022 21:15:12 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/rust-standard-library/</guid><description/></item><item><title>Rust 高级语法</title><link>https://gohalo.github.io/cn/blog/rust-advanced-syntax/</link><pubDate>Thu, 29 Sep 2022 23:45:55 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/rust-advanced-syntax/</guid><description>&lt;p>这里简单介绍基本常用的语法。&lt;/p></description></item><item><title>Rust 基本语法</title><link>https://gohalo.github.io/cn/blog/rust-basic-syntax/</link><pubDate>Mon, 19 Sep 2022 21:15:12 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/rust-basic-syntax/</guid><description>&lt;p>这里简单介绍基本常用的语法。&lt;/p></description></item><item><title>Rust 中的错误处理</title><link>https://gohalo.github.io/cn/blog/rust-handle-error/</link><pubDate>Fri, 16 Sep 2022 21:15:12 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/rust-handle-error/</guid><description/></item><item><title>Rust 基本介绍</title><link>https://gohalo.github.io/cn/blog/rust-basic-introduce/</link><pubDate>Fri, 16 Sep 2022 21:15:12 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/rust-basic-introduce/</guid><description/></item><item><title>Rust 结构体详解</title><link>https://gohalo.github.io/cn/blog/rust-syntax-structure-details/</link><pubDate>Thu, 26 Nov 2020 20:49:18 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/rust-syntax-structure-details/</guid><description>&lt;p>结构体是 Rust 中最常用的，同样使用起来也相对更加复杂。&lt;/p></description></item><item><title>Rust Iced 使用详解</title><link>https://gohalo.github.io/cn/blog/rust-third-iced/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gohalo.github.io/cn/blog/rust-third-iced/</guid><description/></item></channel></rss>
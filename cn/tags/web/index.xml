<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>web on</title><link>https://gohalo.github.io/cn/tags/web/</link><description>Recent content in web on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 20 May 2022 20:37:53 +0800</lastBuildDate><atom:link href="https://gohalo.github.io/cn/tags/web/index.xml" rel="self" type="application/rss+xml"/><item><title>Bootstrap 使用介绍</title><link>https://gohalo.github.io/cn/blog/web-bootstrap-introduce/</link><pubDate>Fri, 20 May 2022 20:37:53 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/web-bootstrap-introduce/</guid><description/></item><item><title>SCSS 基本语法介绍</title><link>https://gohalo.github.io/cn/blog/web-scss-introduce/</link><pubDate>Tue, 19 Apr 2022 22:17:13 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/web-scss-introduce/</guid><description>&lt;p>SCSS 是 SASS3 引入的新语法，其语法完全兼容 CSS3，同时继承了 SASS 的强大功能。&lt;/p></description></item><item><title>CSS 概念介绍</title><link>https://gohalo.github.io/cn/blog/web-css-introduce/</link><pubDate>Sun, 01 Aug 2021 21:15:32 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/web-css-introduce/</guid><description>&lt;p>Cascading Style Sheets, CSS 层叠样式表，定义了如何显示 HTML 中的元素，为了方便管理，通常会将样式表单独保存在 CSS 文件中，利用 CSS 可以很方便控制网页的样式和布局，会大大提升网页开发效率。&lt;/p>
&lt;p>这里简单整理相关的概念。&lt;/p></description></item><item><title>Rest API 介绍以及最佳实践</title><link>https://gohalo.github.io/cn/blog/rest-api-best-practice/</link><pubDate>Sun, 12 Apr 2020 18:19:15 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/rest-api-best-practice/</guid><description>&lt;p>当前网络应用一般分成了独立的前后端，而且前端设备层出不穷，所以需要有统一的标准，便于不同的前后端进行通讯，而 RESTful API 是目前比较成熟的 API 设计理论。&lt;/p>
&lt;p>它结构清晰、符合标准、易于理解、扩展方便，所以正得到越来越多网站的采用。&lt;/p></description></item><item><title>【专题】Web 前端编程语言</title><link>https://gohalo.github.io/cn/blog/topic-language-webs/</link><pubDate>Wed, 15 Dec 2010 22:10:52 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/topic-language-webs/</guid><description>简介 # npm CSS # 基本概念 包括基本语法、样式、盒子模型等概念。 SCSS 语法 在 SASS3 引入的新语法，完全监控 CSS3 并继承了 SASS 强大能力。 权限管理 # 基本介绍 包括基本语法、样式、盒子模型等概念。 React # 基本介绍 其它 # RestAPI 最佳实践 相对来说使用比较广泛的前后端交互接口，也包含了常见的 OpenAPI 等规范。 TypeScript 语法详解 相对来说使用比较广泛的前后端交互接口，也包含了常见的 OpenAPI 等规范。</description></item><item><title>npm 使用详解</title><link>https://gohalo.github.io/cn/blog/web-npm-introduce/</link><pubDate>Wed, 15 Dec 2010 22:10:52 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/web-npm-introduce/</guid><description>NPM # NPM 是 Node 的模块管理和发布工具，类似于 Python 的 setuptools，一些常见的工具，例如 grunt、bower 等工具都是通过 NPM 发布的，NPM 默认包含在 NodeJS 的安装包中，其中 npx 是 npm v5.2.0 引入的命令，所以这里直接安装 NodeJS 包。
详细可以查看官网 www.npmjs.com，也可以从 npm.taobao.org 上下载最新安装包，直接下载二进制安装包解压即可。
安装配置 # 使用默认的镜像源时，可能会导致不稳定，可以通过如下两种方式指定源，如下是淘宝的。
----- 1. 临时指定镜像源 $ npm install --registry http://registry.npm.taobao.org express ----- 2. 永久设置，并查看是否已经修改 $ npm config set registry http://registry.npm.taobao.org $ npm config get registry NPM 安装分为本地安装和全局安装两种，区别在于是否使用 -g 参数。
$ npm info grunt-cli ← 查看版本、依赖等信息 # npm install -g grunt-cli ← 全局安装客户端 $ npm install grunt ← 安装本项目的目录下 $ npm install grunt --save ← 安装本项目的目录下，同时保存在package文件中 $ npm install grunt --save-dev ← 安装本项目的目录下，同时保存在package文件中 # npm uninstall -g &amp;lt;package&amp;gt; ← 删除全局包 $ npm list grunt ← 查看grunt版本信息 $ npm list --depth=0 ← 仅查看本地直接安装包 $ npm list --depth=0 -global ← 仅查看全局直接依赖 $ npm config set prefix &amp;#34;PATH&amp;#34; ← 设置全局路径 $ npm config get prefix ← 获取当前设置的目录，也就是包的安装路径 全局会安装到 /usr/lib/node_modules 目录下，本地则会安装到 node_modules 目录下，而一些二进制文件，例如 lite-server 包，通常同时会在 /usr/bin 目录下安装一个二进制文件。</description></item></channel></rss>
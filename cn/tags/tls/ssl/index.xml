<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tls/ssl on</title><link>https://gohalo.github.io/cn/tags/tls/ssl/</link><description>Recent content in tls/ssl on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://gohalo.github.io/cn/tags/tls/ssl/index.xml" rel="self" type="application/rss+xml"/><item><title>SASS 基本用法介绍</title><link>https://gohalo.github.io/cn/blog/web-sass-introduce/</link><pubDate>Mon, 26 Jul 2021 21:28:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/web-sass-introduce/</guid><description>&lt;p>通过 CSS 可以用来开发网页样式，不过它没有变量、条件语句，只是单纯的描述，写起来很费事，所以，就有人开始为 CSS 加入编程的元素，也就是预处理器。&lt;/p>
&lt;p>使用时通过专门的编程语言进行网页设计，然后再编译成正常的 CSS 文件，最常见的包括了 SASS、LESS 等。&lt;/p></description></item><item><title>通过 OpenSSL 制作自签名证书</title><link>https://gohalo.github.io/cn/blog/openssl-self-signed-certificate/</link><pubDate>Sat, 12 Sep 2020 22:20:03 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/openssl-self-signed-certificate/</guid><description>&lt;p>一般来说，在互联网上使用 HTTPS 时，需要向一些官方的 CA 中心申请证书，不过一般来说比较贵。如果只是公司内部使用，那么就可以自己制作证书，当然也可以模拟 CA 的方式管理证书。&lt;/p>
&lt;p>这里详细介绍如何使用 OpenSSL 制作自签名证书，包括了自建 CA 的方式。&lt;/p></description></item><item><title>详细介绍 PKI 以及 CA 基本概念</title><link>https://gohalo.github.io/cn/blog/ssl-public-key-infrastructure/</link><pubDate>Thu, 13 Aug 2020 19:19:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/ssl-public-key-infrastructure/</guid><description>&lt;p>公钥基础设施 (Public Key Infrastructure, PKI) 是目前网络安全建设的基础与核心，而证书认证机构 (Certificate Authority, CA) 更是核心中的核心，其中 CA 最重要的用途就是提供根证书，用来加强服务器和客户端之间信息交互的安全性。&lt;/p>
&lt;p>这里简单介绍一些基本概念。&lt;/p></description></item><item><title>TLS/SSL 通讯协议详解</title><link>https://gohalo.github.io/cn/blog/security-ssl-tls-overview/</link><pubDate>Fri, 27 Mar 2020 21:18:34 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/security-ssl-tls-overview/</guid><description>&lt;p>SSL/TLS 处于传输层 (一般为 TCP) 以及应用层 (常用的 HTTP) 之间，提供了加密 (Encryption)、认证 (Verification)、鉴定 (Identification) 三种功能。&lt;/p>
&lt;p>如下简单介绍其基本概念。&lt;/p></description></item><item><title>TLSv1.3 简介</title><link>https://gohalo.github.io/cn/blog/security-ssl-tlsv13-introduce/</link><pubDate>Sun, 08 Dec 2019 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/security-ssl-tlsv13-introduce/</guid><description>&lt;p>TLS 1.3 是时隔九年对 TLS 1.2 之前版本的新升级，也是迄今为止改动最大的一次。&lt;/p></description></item><item><title>OpenSSL 常用命令</title><link>https://gohalo.github.io/cn/blog/linux-network-command-openssl/</link><pubDate>Fri, 10 May 2019 22:08:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-network-command-openssl/</guid><description>&lt;p>OpenSSL 除了提供一个开发库之外，还包括了一些常用的命令，这里简单介绍其使用方式。&lt;/p></description></item><item><title>X509 证书内容详细介绍</title><link>https://gohalo.github.io/cn/blog/ssl-x509-certification-details/</link><pubDate>Tue, 07 May 2019 20:08:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/ssl-x509-certification-details/</guid><description>&lt;p>在 X509 标准中，规定了证书包含的信息，同时说明了记录信息的方法，也就是详细的证书格式。&lt;/p>
&lt;p>这里详细介绍其基本概念。&lt;/p></description></item><item><title>TLS/SSL CipherSuite 简介</title><link>https://gohalo.github.io/cn/blog/security-ssl-tls-ciphersuites/</link><pubDate>Mon, 06 May 2019 21:28:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/security-ssl-tls-ciphersuites/</guid><description>&lt;p>直接翻译为加密套件，在 TLS/SSL 中实际上包含了四类，用来完成握手阶段的信息交互，决定了后续信息交互的过程，包括了认证、加解密、密钥交换等所使用的算法。&lt;/p>
&lt;p>这里会简单介绍所支持的算法，以及如何在 OpenSSL 中使用。&lt;/p></description></item><item><title>C 语言使用 SSL</title><link>https://gohalo.github.io/cn/blog/program-c-ssl-tls-basic-introduce/</link><pubDate>Sun, 08 Jul 2018 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/program-c-ssl-tls-basic-introduce/</guid><description/></item><item><title>HTTPS 协议详解</title><link>https://gohalo.github.io/cn/blog/https-introduce/</link><pubDate>Sat, 07 Jun 2014 22:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/https-introduce/</guid><description>&lt;p>我们知道 HTTP 采用的是明文传输，而在互联网中，比如要在淘宝买个东西，使用支付宝转个帐，必须要保证这些信息只有客户端和服务器才知道的，也就是通过 HTTPS 协议。&lt;/p>
&lt;p>接下来，我们就看看 HTTPS 协议是如何实现的。&lt;/p></description></item></channel></rss>
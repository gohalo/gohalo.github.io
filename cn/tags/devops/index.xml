<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devops on</title><link>https://gohalo.github.io/cn/tags/devops/</link><description>Recent content in devops on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 08 Nov 2023 19:29:18 +0800</lastBuildDate><atom:link href="https://gohalo.github.io/cn/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>SSH 登陆失败常见问题排查</title><link>https://gohalo.github.io/cn/blog/ssh-login-failed/</link><pubDate>Wed, 08 Nov 2023 19:29:18 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/ssh-login-failed/</guid><description/></item><item><title>Google Trace Viewer</title><link>https://gohalo.github.io/cn/blog/google-chrome-trace/</link><pubDate>Fri, 21 Jul 2023 18:49:39 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/google-chrome-trace/</guid><description>&lt;p>在 Chrome 中的 &lt;a href="chrome://tracing/">chrome://tracing&lt;/a> 提供了简单有效的 Trace 可视化方案，作为 Performance Profile、Timeline Tracing 都很方便。&lt;/p></description></item><item><title>版本管理</title><link>https://gohalo.github.io/cn/blog/version-control-concept/</link><pubDate>Thu, 28 Apr 2022 21:39:10 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/version-control-concept/</guid><description>&lt;p>介绍一些版本相关的基本概念。&lt;/p></description></item><item><title>BCC eBPF 使用</title><link>https://gohalo.github.io/cn/blog/linux-ebpf-bcc-tools/</link><pubDate>Wed, 01 Dec 2021 18:19:15 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-ebpf-bcc-tools/</guid><description>&lt;p>正常来说，如果要使用 eBPF 提供的能力，需要完成 &amp;ldquo;编写BPF代码-编译成字节码-注入内核-获取结果-展示&amp;rdquo; 这一整套流程，而且会非常复杂。&lt;/p>
&lt;p>而 bcc 是通过 Python 编写的一个 eBPF 工具集，使得上述的 整个过程更加便捷。&lt;/p></description></item><item><title>eBPF 基本功能介绍</title><link>https://gohalo.github.io/cn/blog/linux-ebpf-basic-introduce/</link><pubDate>Wed, 01 Dec 2021 18:19:15 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-ebpf-basic-introduce/</guid><description>&lt;p>Berkeley Packet Filter, BPF 提供了强大的网络包过滤规则，可以确定应该检查哪些流量、忽略哪些流量等，而内核近几年发展的 Extended BPF, eBPF 实际上将应用范围，处理效率进行了更新。&lt;/p>
&lt;p>eBPF 是 Linux 内核近几年最为引人注目的特性之一，通过一个内核内置的字节码虚拟机，完成数据包过滤、调用栈跟踪、耗时统计、热点分析等等高级功能。&lt;/p></description></item><item><title>火焰图使用详解</title><link>https://gohalo.github.io/cn/blog/performance-flamegraph-introduce/</link><pubDate>Wed, 01 Dec 2021 18:19:15 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/performance-flamegraph-introduce/</guid><description>&lt;p>通过火焰图可以有效观察资源消耗在那，不重要的会自然淡化甚至消失，而真正重要的代码路径则会突显，从而提供恰到好处的信息，不多也不少。&lt;/p></description></item><item><title>详细介绍 PKI 以及 CA 基本概念</title><link>https://gohalo.github.io/cn/blog/ssl-public-key-infrastructure/</link><pubDate>Thu, 13 Aug 2020 19:19:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/ssl-public-key-infrastructure/</guid><description>&lt;p>公钥基础设施 (Public Key Infrastructure, PKI) 是目前网络安全建设的基础与核心，而证书认证机构 (Certificate Authority, CA) 更是核心中的核心，其中 CA 最重要的用途就是提供根证书，用来加强服务器和客户端之间信息交互的安全性。&lt;/p>
&lt;p>这里简单介绍一些基本概念。&lt;/p></description></item><item><title>git 基本概念介绍</title><link>https://gohalo.github.io/cn/blog/git-basic-introduce/</link><pubDate>Thu, 16 Jul 2020 19:18:25 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/git-basic-introduce/</guid><description>&lt;p>起初 git 是 Linus Torvalds 为了便于管理 Linux 内核开发而开发的一个开放源码的版本控制软件，这是一个开源的分布式版本控制系统，可以高效地处理从很小到非常大的项目版本管理。&lt;/p>
&lt;p>简单来说，如果你严肃对待编程，就必定会使用&amp;quot;版本管理系统&amp;quot; (Version Control System)。&lt;/p></description></item><item><title>Linux 用户管理的最佳实践</title><link>https://gohalo.github.io/cn/blog/linux-user-best-practise/</link><pubDate>Tue, 25 Feb 2020 22:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-user-best-practise/</guid><description>&lt;p>在 Linux 中，权限管理包括了用户、主用户组、从用户组，通过这三者的组织可以方便对权限的管理，尤其是对于文件的权限管理。这里假设一个运维中的使用场景，通过创建一系列的用户以及用户组，然后查看其权限管理的方案。&lt;/p></description></item><item><title>关于 OSCP 的基本概念以及使用介绍</title><link>https://gohalo.github.io/cn/blog/ssl-oscp-introduce/</link><pubDate>Thu, 15 Aug 2019 20:19:43 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/ssl-oscp-introduce/</guid><description>&lt;p>对于颁发的证书，如果因为一些特殊原因，例如私钥泄漏、证书信息有误、颁发了其它域名证书等等，这样，就需要吊销某些证书，这里关键就是浏览器或客户端如何知道当前使用的证书已经被吊销了。&lt;/p>
&lt;p>为了解决这一问题，引入了 Certificate Revocation List, CRL 和 Online Certificate Status Protocol, OCSP 技术，前者需要用户定期下载用于脱机使用，后者则可实时在线查询。&lt;/p></description></item><item><title>Linux Alternatives 命令使用</title><link>https://gohalo.github.io/cn/blog/linux-command-alternatives-introduce/</link><pubDate>Thu, 13 Jun 2019 22:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-command-alternatives-introduce/</guid><description>&lt;p>在 Linux 中，对于相同的功能可能会存在多种的实现，例如查看文件可以使用 head、tail、cat 等；而且，即使相同软件可能会有多个版本，例如 Python 有 2.X、3.X 版本，等等。&lt;/p>
&lt;p>为了统一命令、方便管理，就可以使用 Linux 中的 alternatives 命令，这里简单介绍。&lt;/p></description></item><item><title>X509 证书内容详细介绍</title><link>https://gohalo.github.io/cn/blog/ssl-x509-certification-details/</link><pubDate>Tue, 07 May 2019 20:08:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/ssl-x509-certification-details/</guid><description>&lt;p>在 X509 标准中，规定了证书包含的信息，同时说明了记录信息的方法，也就是详细的证书格式。&lt;/p>
&lt;p>这里详细介绍其基本概念。&lt;/p></description></item><item><title>TLS/SSL CipherSuite 简介</title><link>https://gohalo.github.io/cn/blog/security-ssl-tls-ciphersuites/</link><pubDate>Mon, 06 May 2019 21:28:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/security-ssl-tls-ciphersuites/</guid><description>&lt;p>直接翻译为加密套件，在 TLS/SSL 中实际上包含了四类，用来完成握手阶段的信息交互，决定了后续信息交互的过程，包括了认证、加解密、密钥交换等所使用的算法。&lt;/p>
&lt;p>这里会简单介绍所支持的算法，以及如何在 OpenSSL 中使用。&lt;/p></description></item><item><title>git 分支管理</title><link>https://gohalo.github.io/cn/blog/git-branch-model/</link><pubDate>Tue, 27 Feb 2018 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/git-branch-model/</guid><description>&lt;p>相比其它的版本管理软件，git 有很多优点，其中很重要的一个特性就是版本的分支 (branch) 和合并 (merge) 十分方便。&lt;/p>
&lt;p>git 分支并非生成一个物理代码拷贝，而是只生成一个指向当前版本的指针，又被称为 &amp;ldquo;快照&amp;rdquo; (snapshot) ，因此，处理起来是分快速，而且节省空间。&lt;/p>
&lt;p>接下来，就看看 git 的版本分支管理策略。&lt;/p></description></item><item><title>Linux 后台服务管理</title><link>https://gohalo.github.io/cn/blog/linux-daemon-tools/</link><pubDate>Fri, 23 Dec 2016 20:19:30 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-daemon-tools/</guid><description>&lt;p>在 Linux 中，对于一个后台服务，如果要可靠地在后台运行，最好能监控进程状态，在意外结束时能自动重启。&lt;/p>
&lt;p>常见的功能全面的主流工具主要有 monit(C)、supervisor(Python)、goreman(Go)，其中 goreman 是对 Ruby 下广泛使用的 foreman 工具，使用 golang 的重写。&lt;/p>
&lt;p>在此，仅介绍下在 Linux 中如何使用。&lt;/p></description></item><item><title>RPM DB 修复</title><link>https://gohalo.github.io/cn/blog/linux-rpm-fixdb-introduce/</link><pubDate>Thu, 01 Dec 2016 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-rpm-fixdb-introduce/</guid><description>&lt;p>在一些 Linux 的发行版本中，例如 CentOS、SUSE 中，会采用 RPM 来管理软件包，不过在使用过程中，经常会出现由于各种各样的原因导致 RPM DB 被损坏。&lt;/p>
&lt;p>这里简单介绍一下其修复方法。&lt;/p></description></item><item><title>日志切割 logrotate 使用方法</title><link>https://gohalo.github.io/cn/blog/logrotate-usage/</link><pubDate>Sun, 31 Jan 2016 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/logrotate-usage/</guid><description>&lt;p>通常我们会通过日志记录程序运行时各种信息，如有异常，则通过日志分析用户行为、记录运行轨迹、查找程序问题。但是，磁盘空间有限，为了节省空间和方便整理，可以将日志文件按时间或大小分成多份，删除时间久远的日志文件。&lt;/p>
&lt;p>这就是通常说的日志滚动 (log rotation)，在本文中，就简单介绍下 Linux 中的 logrotate 程序。&lt;/p></description></item><item><title>如何制作一个标准的 RPM 包</title><link>https://gohalo.github.io/cn/blog/linux-create-rpm-package/</link><pubDate>Wed, 21 Oct 2015 20:10:42 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/linux-create-rpm-package/</guid><description>&lt;p>Red-Hat Package Manager 简称 RPM，这一文件格式在历史名称上虽然打着 RedHat 标志，但其原始设计理念是开放式的，现在包括 OpenLinux、SuSE、Turbo Linux 等多个 Linux 分发版本都有采用，可以算是公认的行业标准了。&lt;/p>
&lt;p>在此介绍下如何制作 RPM 包，尤其是如何写 .spec 配置文件，以及常见的技巧。&lt;/p></description></item><item><title>git 使用杂项</title><link>https://gohalo.github.io/cn/blog/git-cheatsheet/</link><pubDate>Thu, 10 Sep 2015 19:28:10 +0800</pubDate><guid>https://gohalo.github.io/cn/blog/git-cheatsheet/</guid><description>&lt;p>记录 git 常见的示例，可以用来作为参考使用。&lt;/p></description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bastion Docs on</title><link>https://gohalo.github.io/cn/docs/bastion/latest/</link><description>Recent content in Bastion Docs on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 06 Oct 2020 08:49:31 +0000</lastBuildDate><atom:link href="https://gohalo.github.io/cn/docs/bastion/latest/index.xml" rel="self" type="application/rss+xml"/><item><title>REST API</title><link>https://gohalo.github.io/cn/docs/bastion/latest/api/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>https://gohalo.github.io/cn/docs/bastion/latest/api/</guid><description>对于合法的请求应该返回统一的数据格式，对于返回数据，通常会包含如下字段。
code——即一个整数类型的HTTP响应状态码。 message——即返回给前端的信息，正常返回时是&amp;quot;success&amp;quot;，当值为 &amp;ldquo;fail&amp;rdquo; 或 &amp;ldquo;error&amp;rdquo; 时，用于显示错误信息。 data——即前端需要返回的数据。 当值为 &amp;ldquo;fail&amp;rdquo; 或 &amp;ldquo;error&amp;rdquo; 时，设置为null。 2**：成功–表示请求已被成功接收。
200（成功）用浏览器打开一个网页，正常情况下都会返回200HTTP状态码。 201（创建成功）代表资源创建成功 3**：重定向（URL跳转），要完成请求必须进行更进一步的操作。
300（多种选择）下载一部片，服务器有 avi、mp4 等格式。 301（永久移动）请求的网页已永久移动到新位置，自动将请求者转到新位置。 304 (页面未修改) ：按F5刷新（第二次访问）。 4**：客户端错误，请求有语法错误或请求无法实现。
400（错误请求）服务器不理解请求的语法。 401（未授权）没有携带认证信息或携带了错误的认证信息，而没有通过认证。（未登录时） 403（禁止）携带了正确的认证信息，服务器认为该用户对该资源无权访问。(https输成了http) 404（未找到）请求的内容不存在。 5**：服务器端错误，服务器未能实现合法的请求。
500（服务器内部错误）服务器自己出现错误。 502（网关错误）服务器作为网关或代理，从上游服务器收到无效响应。 503（服务器不可用）服务器超载或停机维护不可用。 批量操作返回结构类似 { &amp;ldquo;code&amp;rdquo;: 0, &amp;ldquo;message&amp;rdquo;: &amp;ldquo;success&amp;rdquo;, &amp;ldquo;total&amp;rdquo;: 10, &amp;ldquo;data&amp;rdquo;: [{ }] }
https://www.tizi365.com/archives/34.html &amp;mdash;&amp;ndash; 获取单个用户所属用户组 GET /user/group?id=xxx&amp;amp;uid=xxx { } &amp;mdash;&amp;ndash; 获取单个用户详情，可以选择是否查询相关的用户组 GET /user?id=xxx&amp;amp;uid=xxx&amp;amp;group=true { } &amp;mdash;&amp;ndash; 获取多个用户，可以分页，不含关联用户组信息 GET /users?group=xxx&amp;amp;total=true { &amp;ldquo;total&amp;rdquo;: 10, &amp;ldquo;data&amp;rdquo;: [{ }] } &amp;mdash;&amp;ndash; 添加单个用户，允许绑定用户组，如果已经存在则更新 POST /user { } &amp;mdash;&amp;ndash; 添加多个用户，允许绑定用户组，如果已经存在则更新 POST /users { &amp;ldquo;group&amp;rdquo;: [&amp;ldquo;xxx&amp;rdquo;, &amp;ldquo;xxx&amp;rdquo;], 默认绑定用户组 &amp;ldquo;data&amp;rdquo;: [{ }] } { &amp;ldquo;total&amp;rdquo;: 10, &amp;ldquo;error&amp;rdquo;: 0, &amp;ldquo;detail&amp;rdquo;: [{ &amp;ldquo;uid&amp;rdquo;: &amp;ldquo;xxxx&amp;rdquo;, &amp;ldquo;code&amp;rdquo;: 0, &amp;ldquo;message&amp;rdquo;: &amp;ldquo;success&amp;rdquo;, }] } &amp;mdash;&amp;ndash; 通过uid删除用户 DELETE /user [&amp;ldquo;xxx&amp;rdquo;, &amp;ldquo;xxx&amp;rdquo;] &amp;mdash;&amp;ndash; 通过id删除用户 DELETE /user/id [xxx, xxx]</description></item><item><title>TroubleShoot</title><link>https://gohalo.github.io/cn/docs/bastion/latest/troubleshoot/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>https://gohalo.github.io/cn/docs/bastion/latest/troubleshoot/</guid><description/></item></channel></rss>